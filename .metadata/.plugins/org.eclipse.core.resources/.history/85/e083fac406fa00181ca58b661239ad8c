package testFolder;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.NoSuchElementException;
//import java.util.stream.Collector;
import java.util.stream.Collectors;

public class CompareFunction {
	
	public Double getCloseValue(List<Double> list, Double compareNumber){
//		List<Double> list = Arrays.stream(numbers).collect(Collectors.toList());
		
//		Double result = list.stream().min(Comparator.comparingDouble(i -> Math.abs(i - compareNumber))).get();
//						.orElseThrow(() -> new NoSuchElementException("No value present"));
//		list.parallelStream().min(Comparator.comparingDouble(i -> Math.abs(i - compareNumber)))
		
//		list.stream().min(Comparator.comparingDouble(i ->Math.abs(i-compareNumber))).get();
		
//		list.stream().min(Comparator.comparingDouble(i ->Math.abs(i-compareNumber))).get();
//		
		
		return list.stream().min(Comparator.comparingDouble(i ->Math.abs(i-compareNumber))).get();;
	}
}
