package testFolder;

import java.io.File;
import java.io.IOException;
import java.nio.file.ReadOnlyFileSystemException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.stream.Collectors;

import com.mysql.fabric.xmlrpc.base.Array;

import Global.station;
import asciiFunction.AsciiBasicControl;
import usualTool.AtFileReader;
import usualTool.AtFileReaderExtend;
import testFolder.CompareFunction;

public class test {
	public static Map<String, List<Double>> Sensormap = new HashMap<>();
	public static Map<String, String[]> map = new HashMap<>();
	
	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		System.out.println("請給兩個路徑 1.SensorFilePath  2.AsciiFilePath   ");
		Scanner input = new Scanner(System.in);
		String SensorCoordinateFilePath = input.next();
		String AsciiFilePath = input.next();
		String SensorFilePath = input.next();
		
			
		AtFileReaderExtend ar = new AtFileReaderExtend(SensorCoordinateFilePath,AtFileReaderExtend.UTF8);
		
		
		for(int i=0;i<ar.getCsv().length;i++) {
			String[] temp = {ar.getCsv()[i][0], ar.getCsv()[i][1], ar.getCsv()[i][2]};
			map.put(ar.getCsv()[i][0], temp);
		}//store station coordinate
		
		AtFileReaderExtend Sensorar = new AtFileReaderExtend(SensorFilePath,AtFileReaderExtend.BIG5);
		
		
		
		for(int i=1;i<Sensorar.getCsv2().length;i++) {
			List<Double> Sensortemp = new ArrayList<>();
			for(int w=1;w<28;w++) {
				Sensortemp.add(Double.parseDouble(Sensorar.getCsv2()[i][w]));
//				System.out.println(""+Sensorar.getCsv2()[i][w]);
			}
			Sensormap.put(Sensorar.getCsv2()[i][0], Sensortemp);
		}
//		for (Object key : map.keySet()) {
//            System.out.println(key + " : " + map.get(key));
//        }
		
		
		
		
//		System.out.println("另外取得: sensor"+Sensormap.get("安中五站"));
//		System.out.println("另外取得:map "+map.get("安中五站"));
		
//		
		String folderParentPath = AsciiFilePath;
		File folder = new File(folderParentPath);
		String[] AsciiNamelist = folder.list(); 
		readStation rs = new readStation();
		
//		Double compareNumber =0.02;
		
		
		
		List<List<Double>> finalresult = new ArrayList<>();
		List<Double> result = new ArrayList<>();
		for (String key : Sensormap.keySet()) {
//		for (String StationName : map.keySet()) {
//		    String[] StationCoordinate = map.get(key); 
			String[] StationCoordinate = map.get(key);
		    List<Double> compareNumber = Sensormap.get(key);
//		    System.out.println("comparenumber:" +compareNumber);
			System.out.println("StationName: "+ key );
			
			for(int AsciiTimeSequence = 0; AsciiTimeSequence < AsciiNamelist.length; AsciiTimeSequence++){
				List<String> roundersData = rs.readStation(folderParentPath, AsciiNamelist, AsciiTimeSequence, StationCoordinate);	
				//				Give data to compare function , add result to list  
				List<Double> DoubleRounder = roundersData.stream().map(s ->  Double.parseDouble(s)).collect(Collectors.toList());//convert
//				System.out.println("result: "+DoubleRounder);
				
//				System.out.println("CompareNumber: "+compareNumber.get(AsciiTimeSequence));
				CompareFunction cf = new CompareFunction();
				Double show = cf.getCloseValue(DoubleRounder, compareNumber.get(AsciiTimeSequence));
//				System.out.println(AsciiTimeSequence+ " 最近值 : "+show);
				result.add(show);
			}
			finalresult.add(result);
		}
		for( int i =0;i<finalresult.size();i++) {
			System.out.println(finalresult.get(i));
		}
		
		System.out.println("Finish");
	}
}













